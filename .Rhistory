reticulate::repl_python()
reviews_filter_2 = reviews[(reviews["Division_Name"] == "General") & (reviews["Age"] < 40)]
reviews_filter_2 = reviews[(reviews["Division_Name"] == "General") & (reviews["Age"] < 40)]
sw_eye50
number_missing
#| label: drop_na
#| eval: false
#| echo: true
reviews.shape
#remove all observations with na
reviews_na = reviews.dropna()
number_missing = reviews_na.isna().sum()
number_missing
library(tidyverse)
getwd()
q()
setwd("C:/Users/Matt/Documents/R_Projects/github_workshop/presentation")
reticulate::repl_python()
print("Rolled dice:", rolls)
#| label: dice_roll_game
#| eval: false
#| echo: true
import random
def roll_dice(num_dice=1, num_sides=6):
"""Simulates rolling 'num_dice' dice with 'num_sides' sides."""
return [random.randint(1, num_sides) for _ in range(num_dice)]
# Example: Rolling 2 six-sided dice
rolls = roll_dice(num_dice=2)
print("Rolled dice:", rolls)
#| label: dnd_dice_roll
#| eval: false
#| echo: true
import random
def roll_dnd_dice(dice_type='d20', num_rolls=1, modifier=0):
"""Rolls a D&D-style dice (e.g., 'd6', 'd20') a number of times with an optional modifier."""
# Extract the number of sides from the dice type (e.g., 'd6' -> 6)
sides = int(dice_type[1:])
# Roll the dice the specified number of times and sum the results
rolls = [random.randint(1, sides) for _ in range(num_rolls)]
# Sum up the rolls and add the modifier
total = sum(rolls) + modifier
# Display the individual rolls and the total
print(f"Rolls: {rolls}")
if modifier != 0:
print(f"Modifier: {modifier}")
print(f"Total: {total}")
return total
# Example: Rolling 2d20 with a +3 modifier
roll_dnd_dice('d20', num_rolls=2, modifier=3)
import random
def roll_dice(num_dice=1, num_sides=6):
"""Simulates rolling 'num_dice' dice with 'num_sides' sides."""
return [random.randint(1, num_sides) for _ in range(num_dice)]
# Example: Rolling 2 six-sided dice
rolls = roll_dice(num_dice=2)
print("Rolled dice:", rolls)
View(r)
#| label: matplotlib_lib
#| eval: false
#| echo: true
# import the library
import matplotlib.pyplot as plt
# load dataframe
scotus = pd.read_csv("scotus.csv")
# set datatime
scotus["date"] = pd.to_datetime(scotus["date"])
scotus
# filter pollster to YouGov
scotus = scotus[scotus["pollster"] == "YouGov"]
scotus
%whos
!whos
reticulate::repl_python()
import pandas as pd
#| label: matplotlib_lib
#| eval: false
#| echo: true
# import the library
import matplotlib.pyplot as plt
# load dataframe
scotus = pd.read_csv("scotus.csv")
# set datatime
scotus["date"] = pd.to_datetime(scotus["date"])
scotus
# filter pollster to YouGov
scotus = scotus[scotus["pollster"] == "YouGov"]
scotus
quit
setwd("C:/Users/Matt/Documents/Python_projects/data_cleaning_python")
reticulate::repl_python()
#| label: matplotlib_lib
#| eval: false
#| echo: true
# import the library
import matplotlib.pyplot as plt
# load dataframe
scotus = pd.read_csv("scotus.csv")
# set datatime
scotus["date"] = pd.to_datetime(scotus["date"])
scotus
# filter pollster to YouGov
scotus = scotus[scotus["pollster"] == "YouGov"]
scotus
quit
setwd("C:/Users/Matt/Documents/Python_projects/data_visualization")
reticulate::repl_python()
#| label: matplotlib_lib
#| eval: false
#| echo: true
# import the library
import matplotlib.pyplot as plt
# load dataframe
scotus = pd.read_csv("scotus.csv")
# set datatime
scotus["date"] = pd.to_datetime(scotus["date"])
scotus
# filter pollster to YouGov
scotus = scotus[scotus["pollster"] == "YouGov"]
scotus
#| label: matplotlib_lib
#| eval: false
#| echo: true
# import the library
import matplotlib.pyplot as plt
# load dataframe
scotus = pd.read_csv("scotus_approval.csv")
# set datatime
scotus["date"] = pd.to_datetime(scotus["date"])
scotus
# filter pollster to YouGov
scotus = scotus[scotus["pollster"] == "YouGov"]
scotus
#| label: matplotlib_lib
#| eval: false
#| echo: true
# import the library
import matplotlib.pyplot as plt
# load dataframe
scotus = pd.read_csv("scotus_approval.csv")
# set datatime
scotus["date"] = pd.to_datetime(scotus["date"])
scotus
# filter pollster to YouGov
scotus = scotus[scotus["pollster"] == "YouGov"]
scotus
import matplotlib.pyplot as plt
scotus = pd.read_csv("scotus_approval.csv")
quit
setwd("C:/Users/Matt/Documents/Python_projects/data_visualization")
reticulate::repl_python()
import pandas as pd
import matplotlib.pyplot as plt
scotus = pd.read_csv("scotus_approval.csv")
